events {
    worker_connections 1024;
}


http {

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    server {
        listen [::]:443 ssl;
        listen 443 ssl http2;

        server_name local.docs;

        error_log /var/log/nginx/cells-proxy-error.log;
        access_log /var/log/nginx/cells-proxy-access.log;

        # certificate configuration (generated by certbot)
        ssl_certificate /etc/letsencrypt/live/local.docs/local.docs.crt;
        ssl_certificate_key /etc/letsencrypt/live/local.docs/local.docs.key;

        # Allow any size file to be uploaded.
        client_max_body_size 0;
        # Disable buffering
        proxy_buffering off;

        # Main entry point for the application
        location / {
            # Uncomment this to enable gRPC and thus be able to use cells-sync
            #if ($http_content_type = "application/grpc") {
            #    grpc_pass grpcs://cells:8080;
            #}
            proxy_pass https://localhost:8080;
        }

        # static files
        location ^~ /browser {
            proxy_pass https://127.0.0.1:9980;
            proxy_set_header Host $http_host;
        }


        # WOPI discovery URL
        location ^~ /hosting/discovery {
            proxy_pass https://127.0.0.1:9980;
            proxy_set_header Host $http_host;
        }


        # Capabilities
        location ^~ /hosting/capabilities {
            proxy_pass https://127.0.0.1:9980;
            proxy_set_header Host $http_host;
        }


        # main websocket
        location ~ ^/cool/(.*)/ws$ {
            proxy_pass https://127.0.0.1:9980;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $http_host;
            proxy_read_timeout 36000s;
        }


        # download, presentation and image upload
        location ~ ^/(c|l)ool {
            proxy_pass https://127.0.0.1:9980;
            proxy_set_header Host $http_host;
        }


        # Admin Console websocket
        location ^~ /cool/adminws {
            proxy_pass https://127.0.0.1:9980;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $http_host;
            proxy_read_timeout 36000s;
        }
    }

    server {
        if ($host = local.docs) {
            return 301 https://$host$request_uri;
        }

        listen 80;
        listen [::]:80;
        server_name local.docs;
        return 404;
    }
}